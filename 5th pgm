ProductController class

package com.example.prog5;

import java.util.ArrayList;
import java.util.List;

import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/product")
public class ProductController {
	List<Product> plist = new ArrayList<Product>();
	
	@GetMapping
	public List<Product> getProduct(){
		return plist;
	}
	
	@PostMapping
	public List<?> postProduct(@Valid @RequestBody Product product, BindingResult br){
		List<String> fe = new ArrayList<>();
		if (br.hasErrors()) {
			for(FieldError error:br.getFieldErrors()) {
				fe.add(error.getField() + " " + error.getDefaultMessage());
			}
			return fe;
		}else {
			plist.add(product);
			return plist;
		}
		
	}
	
	@DeleteMapping("/{id}")
	public List<Product> deleteProduct(@PathVariable int id){
		for (Product p: plist) {
			if (p.getId()==id ) {
				plist.remove(p);
				break;
			}
		}
		return plist;
	}
	
	@PutMapping("/{id}")
	public List<Product> putProduct(@RequestBody Product product, @PathVariable int id){
		for(Product p: plist) {
			if (id == p.getId()) {
				p.setName(product.getName());
				p.setPrice(product.getPrice());
				break;
			}
		}
		return plist;
	}

}


Product class



package com.example.prog5;


import org.hibernate.validator.constraints.Length;

import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;

public class Product {

	@NotNull
	@Min(value=1)
	@Max(value=200)
	int id;
	
	@NotNull
	@Min(value=1)
	@Max(value=50000)
	int price;
	
	@NotEmpty
	@Length(max=200)
	String name;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public int getPrice() {
		return price;
	}
	public void setPrice(int price) {
		this.price = price;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	@Override
	public String toString() {
		return "Product [id=" + id + ", price=" + price + ", name=" + name + "]";
	}
	
}


POSTMAN
Postman


{
   "id":1,
    "price": 120,
    "name":"Laptop New"

}
